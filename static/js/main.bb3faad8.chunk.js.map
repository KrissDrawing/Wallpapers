{"version":3,"sources":["Components/Header/Header.js","Components/Card/Card.js","Components/Wallpapers/WallpaperWrapper.js","Components/Wallpapers/Wallpapers.js","Views/Favorite.js","Views/Root.js","index.js"],"names":["Wrapper","Styled","header","Nav","nav","NavItem","NavLink","Header","to","styled","div","Img","img","FavButton","button","Author","p","Card","image","fav","src","urls","regular","alt","alt_description","author","user","name","useState","favorite","setFavorite","useEffect","toggleFavorite","favList","JSON","parse","window","localStorage","getItem","newItem","push","confirm","filter","item","setItem","stringify","prevState","onClick","role","aria-label","defaultProps","WallpaperWrapper","images","slice","map","Wallpapers","clientId","results","setResults","d","Date","categories","getSearchName","Math","floor","random","length","season","getMonth","getSeason","hours","getHours","timeOfDay","getTimeofDay","page","url","axios","get","then","response","data","handleSubmit","Favorite","console","log","Root","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb3faad8.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Styled from 'styled-components';\r\n\r\nconst Wrapper = Styled.header`\r\nwidth:100%;\r\ndisplay:flex;\r\njustify-content:center;\r\nz-index:999;\r\n`;\r\n\r\nconst Nav = Styled.nav`\r\nwidth:100%;\r\nheight:5vh;\r\nbackground-color: rgb(255,200,0);\r\ndisplay:flex;\r\njustify-content:center;\r\nalign-items:center;\r\n`;\r\n\r\nconst NavItem = Styled(NavLink)`\r\npadding:10px;\r\ntext-decoration:none;\r\ncolor:#fff;\r\n`;\r\nconst Header = () => (\r\n  <Wrapper>\r\n    <Nav>\r\n      {/* <button onClick={() => window.localStorage.clear()}>CLEAR LS</button>\r\n      <button onClick={() => console.log(window.localStorage)}>SHOW LS</button> */}\r\n      <NavItem to=\"\">Home</NavItem>\r\n      <NavItem to=\"fav\">Favorite</NavItem>\r\n    </Nav>\r\n  </Wrapper>\r\n);\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  align-items: center;\r\n  justify-content: center;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  object-fit: cover;\r\n  min-width: 100%;\r\n  min-height: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n\r\nconst FavButton = styled.button`\r\n  position: absolute;\r\n  top: 5px;\r\n  left: 5px;\r\n  background: none;\r\n  border: none;\r\n  font-style: bold;\r\n  font-size: 20px;\r\n`;\r\n\r\nconst Author = styled.p`\r\n  @import url('https://fonts.googleapis.com/css2?family=Just+Another+Hand&display=swap');\r\n  font-family: 'Just Another Hand', cursive;\r\n  position: absolute;\r\n  background-color: rgba(255, 255, 255, 0.6);\r\n  padding: 5px 10px;\r\n  bottom: -10px;\r\n  left: 5px;\r\n  border-radius: 30px;\r\n`;\r\n\r\nconst Card = ({ image, fav }) => {\r\n  const src = image.urls.regular;\r\n  const alt = image.alt_description;\r\n  const author = image.user.name;\r\n  const [favorite, setFavorite] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (fav) setFavorite(true);\r\n  }, []);\r\n\r\n  const toggleFavorite = () => {\r\n    let favList = JSON.parse(window.localStorage.getItem('favorite'));\r\n    if (favList === null) {\r\n      favList = [];\r\n    }\r\n    const newItem = {\r\n      ...image,\r\n      favorite: !favorite,\r\n    };\r\n\r\n    if (favorite === false) {\r\n      favList.push(newItem);\r\n    } else if (window.confirm('Do you want to remove from favorite?')) {\r\n      favList = favList.filter((item) => item.urls.regular !== src);\r\n    }\r\n    window.localStorage.setItem('favorite', JSON.stringify(favList));\r\n    setFavorite((prevState) => !prevState);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      {!favorite ? (\r\n        <FavButton onClick={toggleFavorite}>\r\n          <span role=\"img\" aria-label=\"heart_purple\">\r\n            ðŸ’œ\r\n          </span>\r\n        </FavButton>\r\n      ) : (\r\n        <FavButton onClick={toggleFavorite}>\r\n          <span role=\"img\" aria-label=\"heart_gold\">\r\n            ðŸ’›\r\n          </span>\r\n        </FavButton>\r\n      )}\r\n\r\n      <Author>{author}</Author>\r\n      <Img src={src} alt={alt} />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nCard.propTypes = {\r\n  image: PropTypes.objectOf(PropTypes.object).isRequired,\r\n  fav: PropTypes.bool,\r\n};\r\n\r\nCard.defaultProps = {\r\n  fav: false,\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport Card from '../Card/Card';\r\n\r\nconst Wrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-gap: 0px;\r\n  width: 100vw;\r\n  height: 95vh;\r\n  overflow-x: hidden;\r\n\r\n  @media (max-width: 1024px) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n  @media (max-width: 768px) {\r\n    grid-template-columns: 1fr;\r\n    height: 300vh;\r\n  }\r\n`;\r\n\r\nconst WallpaperWrapper = ({ images, favorite }) => (\r\n  <Wrapper>\r\n    {/* {console.log(images)} */}\r\n    {images !== null && images.slice(0, 6).map((image) => <Card image={image} fav={favorite} />)}\r\n  </Wrapper>\r\n);\r\n\r\nWallpaperWrapper.propTypes = {\r\n  images: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  favorite: PropTypes.bool,\r\n};\r\n\r\nWallpaperWrapper.defaultProps = {\r\n  favorite: false,\r\n};\r\n\r\nexport default WallpaperWrapper;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Styled from 'styled-components';\r\nimport WallpaperWrapper from './WallpaperWrapper';\r\n\r\nconst Wrapper = Styled.div`\r\n  display:flex;\r\n  justify-content:center;\r\n`;\r\n\r\nconst Wallpapers = () => {\r\n  const [clientId] = useState('R_KqIAnUPaKvlLfhAxu8grQgkpJLRVeideQN8mQa5Ps');\r\n  const [results, setResults] = useState([]);\r\n  const d = new Date();\r\n\r\n  const categories = [\r\n    'vehicle',\r\n    'island',\r\n    'village',\r\n    'nature',\r\n    'city',\r\n    'sea',\r\n    'mountains',\r\n    'forest',\r\n    'meadow',\r\n  ];\r\n\r\n  const getCategory = () => {\r\n    return categories[Math.floor(Math.random() * categories.length)];\r\n  };\r\n\r\n  const getSeason = () => {\r\n    const month = +d.getMonth() + 1;\r\n    let season = '';\r\n    switch (month) {\r\n      case 12:\r\n      case 1:\r\n      case 2:\r\n        season = 'winter';\r\n        break;\r\n      case 3:\r\n      case 4:\r\n      case 5:\r\n        season = 'spring';\r\n        break;\r\n      case 6:\r\n      case 7:\r\n      case 8:\r\n        season = 'summer';\r\n        break;\r\n      case 9:\r\n      case 10:\r\n      case 11:\r\n        season = 'fall';\r\n        break;\r\n      default:\r\n        season = 'kitten';\r\n        break;\r\n    }\r\n    return season;\r\n  };\r\n\r\n  const getTimeofDay = () => {\r\n    const hours = d.getHours();\r\n    let timeOfDay = '';\r\n\r\n    switch (hours) {\r\n      case hours > 0 && hours < 5:\r\n        timeOfDay = 'night';\r\n        break;\r\n      case hours >= 5 && hours < 12:\r\n        timeOfDay = 'morning';\r\n        break;\r\n      case hours >= 12 && hours < 18:\r\n        timeOfDay = 'afternoon';\r\n        break;\r\n      case hours >= 18 && hours < 24:\r\n        timeOfDay = 'afternoon';\r\n        break;\r\n      default:\r\n        timeOfDay = 'noon';\r\n        break;\r\n    }\r\n    return timeOfDay;\r\n  };\r\n\r\n  const getSearchName = () => {\r\n    return `${getCategory()} - ${getSeason()} - ${getTimeofDay()}`;\r\n  };\r\n\r\n  const handleSubmit = (name, page) => {\r\n    const url = `https://api.unsplash.com/search/photos?page=${page}&query=${name}&client_id=${clientId}`;\r\n    axios.get(url).then((response) => {\r\n      setResults(response.data.results);\r\n    });\r\n  };\r\n\r\n  // useEffect(() => handleSubmit('spring', 1), []);\r\n  useEffect(() => handleSubmit(getSearchName(), Math.floor(Math.random() * 101)), []);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <WallpaperWrapper images={results} />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Wallpapers;\r\n","import React, { useState, useEffect } from 'react';\r\nimport WallpaperWrapper from '../Components/Wallpapers/WallpaperWrapper';\r\n\r\nconst Favorite = () => {\r\n  const [favorite, setFavorite] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setFavorite(JSON.parse(window.localStorage.getItem('favorite')));\r\n  }, []);\r\n  console.log(favorite);\r\n  if (favorite !== null && favorite.length !== 0) {\r\n    return <WallpaperWrapper images={favorite} favorite />;\r\n  }\r\n  return <h3>There is no favorite items</h3>;\r\n};\r\n\r\nexport default Favorite;\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\r\nimport Header from 'Components/Header/Header';\r\nimport Wallpapers from 'Components/Wallpapers/Wallpapers';\r\nimport Favorite from 'Views/Favorite';\r\n\r\nfunction Root() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Header />\r\n      <Switch>\r\n        <Route exact path=\"/Wallpapers\">\r\n          <Redirect to=\"/\" />\r\n        </Route>\r\n        <Route exact path=\"/\" component={Wallpapers} />\r\n        <Route path=\"/fav\" component={Favorite} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Root;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Root from './Views/Root';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Root />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}